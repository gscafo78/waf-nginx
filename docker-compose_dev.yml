services:
  waf-nginx:
    image: 4ss078/waf-nginx:latest
    build:
      context: ./waf/build
      dockerfile: Dockerfile
    container_name: waf-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./waf/conf.d:/etc/nginx/conf.d
      - ./waf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./waf/user-rules:/etc/nginx/modsec/user-rules
      - ./certbot/letsencrypt:/etc/letsencrypt
      - ./waf/logs:/var/log/nginx
      - ./www:/var/www/certbot
    restart: unless-stopped
    networks:
      - waf-nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    volumes:
      - ./crowdsec/config:/etc/crowdsec
      - ./crowdsec/data:/var/lib/crowdsec/data
      - ./waf/logs:/var/log/nginx:ro
    restart: unless-stopped
    networks:
      - waf-nginx

  certbot-renew:
    image: 4ss078/certbot:latest
    build:
      context: ./certbot/build
      dockerfile: Dockerfile
    container_name: certbot-renew
    volumes:
      - ./certbot/letsencrypt:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./www:/var/www/certbot
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        while :; do
          certbot renew --webroot -w /var/www/certbot --quiet;
          sleep 12h;
        done
    restart: unless-stopped
    depends_on:
      waf-nginx:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "test", "-f", "/etc/letsencrypt/live/README"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - waf-nginx

  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    volumes:
      - ./crowdsec/data:/var/lib/crowdsec/data
      - ./crowdsec/config:/etc/crowdsec
    restart: unless-stopped
    networks:
      - waf-nginx
    depends_on:
      - waf-nginx

  bounce:
    image: crowdsecurity/cs-firewall-bouncer:latest
    container_name: bounce
    volumes:
      - ./crowdsec/bouncer:/etc/crowdsec/bouncers
    restart: unless-stopped
    networks:
      - waf-nginx
    depends_on:
      - crowdsec

networks:
  waf-nginx:
    external: true
